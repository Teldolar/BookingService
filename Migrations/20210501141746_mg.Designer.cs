// <auto-generated />
using System;
using Booking;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Booking.Migrations
{
    [DbContext(typeof(bookingContext))]
    [Migration("20210501141746_mg")]
    partial class mg
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Russian_Russia.1251@icu")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Booking.Booking", b =>
                {
                    b.Property<DateTime>("Begindate")
                        .HasColumnType("date")
                        .HasColumnName("begindate");

                    b.Property<DateTime>("Enddate")
                        .HasColumnType("date")
                        .HasColumnName("enddate");

                    b.Property<int?>("Idofroom")
                        .HasColumnType("integer")
                        .HasColumnName("idofroom");

                    b.Property<int?>("Userid")
                        .HasColumnType("integer")
                        .HasColumnName("userid");

                    b.HasIndex("Idofroom");

                    b.HasIndex("Userid");

                    b.ToTable("booking");
                });

            modelBuilder.Entity("Booking.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("city");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("description");

                    b.Property<bool>("Isfreerooms")
                        .HasColumnType("boolean")
                        .HasColumnName("isfreerooms");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("hotel");
                });

            modelBuilder.Entity("Booking.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("HId")
                        .HasColumnType("integer")
                        .HasColumnName("h_id");

                    b.Property<bool>("Isfree")
                        .HasColumnType("boolean")
                        .HasColumnName("isfree");

                    b.Property<double>("Price")
                        .HasColumnType("double precision")
                        .HasColumnName("price");

                    b.Property<int>("Seats")
                        .HasColumnType("integer")
                        .HasColumnName("seats");

                    b.HasKey("Id");

                    b.HasIndex("HId");

                    b.ToTable("room");
                });

            modelBuilder.Entity("Booking.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("login");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("password");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Booking.Booking", b =>
                {
                    b.HasOne("Booking.Room", "IdofroomNavigation")
                        .WithMany()
                        .HasForeignKey("Idofroom")
                        .HasConstraintName("booking_idofroom_fkey")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Booking.User", "User")
                        .WithMany()
                        .HasForeignKey("Userid")
                        .HasConstraintName("booking_userid_fkey")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("IdofroomNavigation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Booking.Room", b =>
                {
                    b.HasOne("Booking.Hotel", "HIdNavigation")
                        .WithMany("Rooms")
                        .HasForeignKey("HId")
                        .HasConstraintName("room_h_id_fkey")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("HIdNavigation");
                });

            modelBuilder.Entity("Booking.Hotel", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
